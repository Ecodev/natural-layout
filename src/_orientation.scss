@use 'variables';
@use 'mixins';

.nat-fill {
    height: 100%;
    min-height: 100%;
    min-width: 100%;
    width: 100%;
}

.nat-wrap {
    flex-wrap: wrap;
}

.nat-wrap-reverse {
    flex-wrap: wrap-reverse;
}

.nat-center {
    align-items: center;
    justify-content: center;
}

:not(.nat-horizontal):not(.nat-vertical):not(.nat-sm-horizontal):not(.nat-sm-vertical):not(.nat-md-horizontal):not(
        .nat-md-vertical
    ):not(.nat-lg-horizontal):not(.nat-lg-vertical):not(.nat-xl-horizontal):not(.nat-xl-vertical) {
    &.nat-center {
        display: grid;
        place-content: center center;
    }
}

@mixin nat-gap() {
    gap: var(--natural-default-spacing);

    &-horizontal {
        column-gap: var(--natural-default-spacing);
    }
    &-vertical {
        row-gap: var(--natural-default-spacing);
    }

    $gapsPx: 0, 1, 5, 10, 15, 20, 30;
    @each $gap in $gapsPx {
        &-#{$gap} {
            gap: #{$gap}px;
        }
        &-horizontal-#{$gap} {
            column-gap: #{$gap}px;
        }
        &-vertical-#{$gap} {
            row-gap: #{$gap}px;
        }
    }
}

@mixin nat-expand($orientation) {
    flex: 1 1 1e-9px;

    &-20 {
        max-#{$orientation}: 20%;
    }

    &-25 {
        max-#{$orientation}: 25%;
    }

    &-33 {
        max-#{$orientation}: 33%;
    }

    &-50 {
        max-#{$orientation}: 50%;
    }

    &-66 {
        max-#{$orientation}: 66%;
    }

    &-75 {
        max-#{$orientation}: 75%;
    }

    &-80 {
        max-#{$orientation}: 80%;
    }
}

@mixin nat-vertical($size) {
    display: flex;
    flex-direction: column;

    &.nat-top {
        justify-content: flex-start;
    }

    &.nat-bottom {
        justify-content: flex-end;
    }

    &.nat-left {
        align-items: flex-start;
    }

    &.nat-right {
        align-items: flex-end;
    }

    &.nat-distribute {
        justify-content: space-between;
    }

    @if ($size) {
        & > .nat#{$size}-expand {
            @include nat-expand('height');
        }
    } @else {
        & > .nat-expand {
            @include nat-expand('height');
        }
    }
}

.nat-vertical {
    @include nat-vertical(null);
}

@mixin nat-horizontal($size) {
    display: flex;
    flex-direction: row;

    &.nat-top {
        align-items: flex-start;
    }

    &.nat-bottom {
        align-items: flex-end;
    }

    &.nat-left {
        justify-content: flex-start;
    }

    &.nat-right {
        justify-content: flex-end;
    }

    &.nat-distribute {
        justify-content: space-between;
    }

    @if ($size) {
        & > .nat#{$size}-expand {
            @include nat-expand('width');
        }
    } @else {
        & > .nat-expand {
            @include nat-expand('width');
        }
    }
}

.nat-horizontal {
    @include nat-horizontal(null);
}

.nat-gap {
    @include nat-gap();
}

/**
All nat-expand and nat-xx-expand is border box
 */
[class*='-expand'] {
    box-sizing: border-box;
}

/**
All no 100% nat-expand-xx and nat-xx-expand-yy
 */
[class*='expand-'] {
    flex: 1 1 100%;
}

.nat-expand {
    flex: 1 1 1e-9px;
}

.nat-expand-no-collapse {
    flex: 1 0 auto;
}

.nat-no-collapse {
    flex-shrink: 0;
}

.nat-no-expand {
    flex-grow: 0;
}

@each $key, $value in variables.$breakpoints {
    @include mixins.media($key) {
        .nat-#{$key}-vertical {
            @include nat-vertical('-#{$key}');
        }

        .nat-#{$key}-horizontal {
            @include nat-horizontal('-#{$key}');
        }

        .nat-#{$key}-gap {
            @include nat-gap();
        }

        .nat-#{$key}-expand {
            flex: 1 1 1e-9px;
        }
    }
}
